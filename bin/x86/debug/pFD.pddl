(define (problem PublicProblem)
(:domain PublicDomain)
(:init
	(P_ARTIFICIAL1000 )
	(higher normal zero)
	(higher low zero)
	(next normal low)
	(next low zero)
	(is-message-at msg1-1 node1)
	(neighbor node1 node2)
	(P_ARTIFICIAL2000 )
	(is-message-at msg2-1 node2)
	(neighbor node2 node1)
	(neighbor node2 node3)
	(P_ARTIFICIAL3000 )
	(is-message-at msg3-1 node3)
	(neighbor node3 node2)
	(neighbor node3 node4)
	(neighbor node3 node5)
	(P_ARTIFICIAL4000 )
	(is-message-at msg4-1 node4)
	(neighbor node4 node3)
	(neighbor node4 node5)
	(P_ARTIFICIAL5000 )
	(P_ARTIFICIAL5001 )
	(P_ARTIFICIAL5002 )
	(is-message-at msg5-1 node5)
	(neighbor node5 node3)
	(neighbor node5 node4)
	(neighbor node5 base)
)
(:goal 
(and (has-data base node1) (has-data base node2) (has-data base node3) (has-data base node4) (has-data base node5)))
)
